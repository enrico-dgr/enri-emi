.registration {
    height: 100vh;
    width: 100vw;
    position: relative;
    overflow: hidden;
}

.registration-bg {
    position: absolute;
    top: 0;
    left: 0;
    /* This line lets the div rotate around the top left cornet */
    transform-origin: top left;
    /* Rotating of 90deg around the top left corner,
    causes the ex-top border to lie upon the new-right border
    (they're actually not 'ex' or 'new' in dom, but they can be
    considered like this, visually speaking, for the user).
    So, after rotation, the div will hide on the left side of
    phone and you move it to the right (visually speaking, but
    you move it up, in terms of div) with 'translateY(-100%)' */
    transform: rotate(90deg) translateY(-100%);
    /* image size is 800 x 600 so... 800/600=100/75 */
    height: 75vh;
    width: 100vh;
    /* then you use 'cover' because the 'div' has same size as the image */
    background-size: cover;
    background-image: url("../../assets/img/background/Background-registration.gif");
    background-repeat: no-repeat;
    background-position: bottom left;
    /* random staff probably useless but NOT dangerous, 
    no need to remove. */
    margin: 0;
    padding: 0;
    border: 0;
}

.content {
    position: relative;
    width: 100%;
    height: 100%;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
}

.title {
    color: #f5bc00;
    font-family: "Inter-SemiBold", "Inter", sans-serif;
    font-size: 26px;
    font-weight: 600;
    letter-spacing: 0px;
    line-height: 1.2;
    margin: 30px 0 0 0;
    text-align: center;
    text-shadow: 1px 2px 3px #000000;
    text-transform: uppercase;
    white-space: pre;
}

.rules-content {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.rules-content img {
    width: 360px;
    height: 325px;
}

.rules {
    margin: 5% 0 5% 0;
    white-space: pre;
    text-shadow: 1px 2px 3px #000000;
    font-weight: 600;
    font-family: "Inter-SemiBold", "Inter", sans-serif;
    color: #f5bc00;
    font-size: 22px;
    letter-spacing: 0px;
    line-height: 1.2;
    text-transform: uppercase;
    text-align: center;
}

.enter-game {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;
}

.enter-game input {
    background-color: rgb(235, 235, 235);
    border: (60, 0, 255, 0.5);
    border-color: #720bf8ad;
    border-radius: 20px;
    border-width: 3px;
    color: rgb(51, 51, 51);
    caret-color: rgb(126, 124, 124);
    font-size: 20px;
    height: 38px;
    line-height: 1.4px;
    max-width: 70vw;
    padding: 7px 20px;
    text-align: center;
    width: 280px;
}

.enter-game input::placeholder {
    /* Chrome, Firefox, Opera, Safari 10.1+ */
    color: rgb(153, 153, 153);
    opacity: 1; /* Firefox */
}

.enter-game input:-ms-input-placeholder {
    /* Internet Explorer 10-11 */
    color: rgb(117, 117, 117);
}

.enter-game input::-ms-input-placeholder {
    /* Microsoft Edge */
    color: rgb(117, 117, 117);
}

.enter-game input:focus {
    border-color: #2600ffea;
}

.enter-game input.bounce {
    outline: 0;
    /* background-color: rgba(255, 0, 0, 0.418); */
    border-color: red;
    animation-name: bounce;
    animation-duration: 0.5s;
    animation-delay: 0.25s;
}

/* This approximates the ease-in-out-bounce animation from easings.net, which would require a plug-in to use*/
@keyframes bounce {
    0% {
        transform: translateX(0px);
        timing-function: ease-in;
    }
    37% {
        transform: translateX(5px);
        timing-function: ease-out;
    }
    55% {
        transform: translateX(-5px);
        timing-function: ease-in;
    }
    73% {
        transform: translateX(4px);
        timing-function: ease-out;
    }
    82% {
        transform: translateX(-4px);
        timing-function: ease-in;
    }
    91% {
        transform: translateX(2px);
        timing-function: ease-out;
    }
    96% {
        transform: translateX(-2px);
        timing-function: ease-in;
    }
    100% {
        transform: translateX(0px);
        timing-function: ease-in;
    }
}

.enter-game > button {
    align-items: center;
    appearance: none;
    background-color: rgb(255, 187, 0);
    border-radius: 24px;
    border-style: none;
    box-shadow: rgba(0, 0, 0, 0.75) 2px 8px 15px;
    box-sizing: border-box;
    color: #5200be;
    cursor: pointer;
    display: inline-flex;
    fill: currentcolor;
    font-family: "Google Sans", Roboto, Arial, sans-serif;
    font-size: 18px;
    font-weight: bold;
    height: 48px;
    justify-content: center;
    letter-spacing: 0.25px;
    line-height: normal;
    max-width: 100%;
    margin: 6px 0 0 0;
    overflow: visible;
    padding: 0 24px;
    position: relative;
    text-align: center;
    text-transform: none;
    transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),
        opacity 15ms linear 30ms, transform 270ms cubic-bezier(0, 0, 0.2, 1) 0ms,
        background-color 200ms, color 200ms,
        transform 300ms cubic-bezier(0.23, 1, 0.32, 1);
    /* This simulates the press of button by
    setting 'transition: transform ....' and the new
    value in :active to zero.
    Also you can add a similar process to 'box-shadow' to
    simulate the shadow in normal button state and 
    nullify shadow when pressed (:active) */
    transform: translateY(-2px);
    user-select: none;
    -webkit-user-select: none;
    touch-action: manipulation;
    width: 130px;
    will-change: transform, opacity;
    z-index: 0;
}

.enter-game button:active {
    background-color: #5200be;
    box-shadow: none;
    color: #f5bc00;
    outline: none;
    transform: translateY(0);
}

/*                                 */
/* Screen rotations and background */
/*                                 */

/* Keep portrait-layout for landscape in smartphones and rectangular-shaped tablets */
@media only screen and (min-width: 530px) and (min-height: 200px) and (max-height: 500px) and (orientation: landscape) {
    .registration {
        height: 100vw;
        transform-origin: left top;
        transform: rotate(-90deg) translateX(-100%);
        width: 100vh;
    }
    .registration-bg {
        height: 100vh;
        width: 100vw;
    }
}

@media only screen and (min-width: 515px) and (min-height: 500px) {
    .registration-bg {
        transform: rotate(0) translateY(0);
        height: 100vh;
        width: 100vw;
    }
}

/*       */
/* Sizes */
/*       */

@media only screen and (max-width: 340px) {
    .rules-content img {
        width: 300px;
        height: 260px;
    }
}

@media only screen and (max-width: 330px) {
    .title {
        font-size: 24px;
    }
}

@media only screen and (min-width: 450px) and (min-height: 730px) {
    .title {
        font-size: 32px;
    }
    .rules {
        font-size: 26px;
    }
    .rules-content img {
        width: 375px;
        height: 335px;
    }
    .enter-game > input {
        height: 45px;
        font-size: 24px;
        width: 310px;
    }
    .enter-game > button {
        border-radius: 50px;
        height: 55px;
        font-size: 22px;
        width: 150px;
    }
}

/* @media only screen and (min-height: 768px) {
    .title {
        font-size: 37px;
    }
    .rules {
        font-size: 29px;
    }
    .rules-content img {
        width: 360px;
        height: 335px;
    }
    .enter-game > input {
        font-size: 27px;
    }
    .enter-game > button {
        border-radius: 44px;
        height: 54px;
        font-size: 26px;
        padding: 22px 44px;
        width: 160px;
    }
} */
